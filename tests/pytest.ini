[tool:pytest]
# Pytest configuration file for Memoriai

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Minimum version
minversion = 6.0

# Default options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=memoriai
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml
    --cov-fail-under=80
    --maxfail=5

# Test markers
markers =
    unit: Unit tests that test individual components in isolation
    integration: Integration tests that test component interactions
    performance: Performance and benchmark tests (may be slow)
    slow: Tests that take a long time to run
    requires_db: Tests that require a database connection
    requires_llm: Tests that require LLM API access
    requires_network: Tests that require network access

# Filtering and warnings
filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::ResourceWarning

# Logging
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage configuration
[coverage:run]
source = memoriai
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */.*
    setup.py
    memoriai/__init__.py

[coverage:report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov
title = Memoriai Test Coverage Report

[coverage:xml]
output = coverage.xml